name: Pipeline Automatizado
on:
  push:
    branches: 
      - main

jobs:
  CI-ContinuousIntegration:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: tests
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres -d tests"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Make new .env.test file
        uses: SpicyPizza/create-envfile@v2.0.3
        with:
          envkey_POSTGRES_PASSWORD: "postgres"
          envkey_DATABASE_URL: "postgresql://postgres:postgres@postgres:5432/tests"
          directory: .
          file_name: .env.test

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U postgres -d tests; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Create tests database if it doesn't exist
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'tests'" | grep -q 1 || psql -h localhost -U postgres -c "CREATE DATABASE tests;"

      - name: Run Prisma migrations
        run: dotenv -e .env.test -- npx prisma migrate deploy

      - name: Run tests
        run: docker compose -f docker-compose-test.yml run backend npm run test:ci

  CD-DeployToRender:
    name: Deploy to Render
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to production
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

  CD-PublishToDockerHub:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: CD-DeployToRender
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/daily-kindness-backend:latest